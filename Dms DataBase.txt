CREATE TABLE DeptMst(
   DeptId serial PRIMARY KEY  NOT NULL,
   DeptNm        varchar(100)  NOT NULL UNIQUE,
   ShrtNm        varchar(4),     
   CreationDt    timestamp,
   Status        Char(1)  CHECK(STATUS IN ('A', 'D')) default 'A' 
);


CREATE TABLE DesigMst(
   DesgId serial PRIMARY KEY  NOT NULL,
   DesgNm       varchar(100)  NOT NULL UNIQUE,
   ShrtNm        varchar(4),     
   CreationDt    timestamp,
   Status        Char(1)  CHECK(STATUS IN ('A', 'D')) default 'A' 
);


CREATE TABLE Config(
   Pk Char(3)  NOT NULL,
   Sk Char(4)  NOT NULL,
   Ds varchar(50) NOT NULL,
   Value varchar(50),
   PRIMARY KEY(Pk, Sk) UNIQUE
  );

CREATE TABLE Menu(
   Mid      serial PRIMARY KEY  NOT NULL,
   Pid      integer  NOT NULL UNIQUE,
   Mstyle   char(1) CHECK(STATUS IN ('H', 'V')) default 'H' ,     
   MenuNm   Varchar(40) NOT NULL,
   PageNm   Varchar(50) NOT NULL,  
   Status   char(1) CHECK(STATUS IN ('A', 'D')) default 'A' 
);

CREATE TABLE IconMst(
  IconId      serial PRIMARY KEY  NOT NULL,
   Pid      integer  NOT NULL UNIQUE,
   Mstyle   char(1) CHECK(STATUS IN ('H', 'V')) default 'H' ,     
   MenuNm   Varchar(40) NOT NULL,
   PageNm   Varchar(50) NOT NULL,  
   Status   char(1) CHECK(STATUS IN ('A', 'D')) default 'A' 
);

CREATE TABLE UserMst(
   UserId bigserial PRIMARY KEY  NOT NULL,
  EmailId Varchar(100)  NOT NULL UNIQUE,
   UserName  varchar(200) NOT NULL,
   Address   varchar(300),
   MobNo     numeric(12)   NOT NULL,
   DeptId    integer   NOT NULL references deptmst(DeptId),
   DesgId	 integer   NOT NULL	references desigmst(DesgId),					
   UserLevel integer   NOT NULL,
   Upw1   varchar(15)  NOT NULL,
   Upw2   varchar(15),
   Upw3   varchar(15),
   CreatedBy	varchar(200)  NOT NULL,
   CreationDate  timestamp,
   Status   Char(1)  CHECK(STATUS IN ('A', 'T', 'S')) default 'A',       
   HintId   integer references HintQuestionMst(hintId),
   HintAns  varchar(50),
   OTP      varchar(10)	
 );


CREATE TABLE UACC(
   UserId  bigint  NOT NULL references UserMst(UserId),     
   Mid  integer  NOT NULL references Menu(Mid),
   AAdd  char(1)  CHECK(AAdd IN ('A', 'D')) default 'A',     
   AUpdate Char(1)  CHECK(AUpdate IN ('A', 'D')) default 'A',     
   ADel  Char(1)  CHECK(ADel IN ('A', 'D')) default 'A',       
   AView   char(1)  CHECK(AView IN ('A', 'D')) default 'A',     
   APass   char(1)  CHECK(APass IN ('A', 'D')) default 'A',   
   PRIMARY KEY(UserId, Mid)
);

CREATE TABLE LoginHistory(
   SrNo  numeric(12) PRIMARY KEY  NOT NULL,
   UserId  bigint  NOT NULL references UserMst(UserId),
   TransType Char(1) CHECK(TransType IN ('I', 'O')), 
   TransDateTime   timestamp NOT NULL
);   

CREATE TABLE hintquestionmst
(
    hintid serial PRIMARY KEY  NOT NULL,
    hintquestion varchar(50) NOT NULL
)

CREATE TABLE AllSequence
(
    seqNm varchar(10) PRIMARY KEY  NOT NULL,
    currentVal  integer NOT NULL;
)


CREATE TABLE ClassMst(
   ClassId bigserial PRIMARY KEY  NOT NULL,
   DeptId    integer   NOT NULL references deptmst(DeptId),
   ClassNm  varchar(200) NOT NULL UNIQUE,				
   IsInnerFolders Char(1)  NOT NULL CHECK(IsInnerFolders  IN ('Y', 'N')) default 'Y',
   FolderCnt integer default 0,
   FileCnt integer default 0,
   StorageType  Char(4)  NOT NULL CHECK(StorageType IN ('DTBS', 'DISC')),
   DriveNm varchar(15),
   Atribt char(1) NOT NULL CHECK(Atribt IN ('A', 'D', 'R', 'H')) default 'A',
   ReadOnlyOthDept char(1) CHECK(ReadOnlyOthDept  IN ('Y', 'N')) default 'N',
   ReadOnlyPublic char(1) CHECK(ReadOnlyPublic IN ('Y', 'N')) default 'N',
   AllowDownload char(1)  CHECK(AllowDownload  IN ('Y', 'N')) default 'Y',
   CreatedBy bigint NOT NULL references UserMst(UserId),
   CreationDate  timestamp
  
   );


CREATE TABLE FolderMst(
   FolderId bigserial PRIMARY KEY  NOT NULL,
   ParentId bigint NOT NULL default 0,
   RootId bigint NOT NULL default 0,
   DeptId    integer   NOT NULL references deptmst(DeptId),
   FldrNm varchar(200) NOT NULL,
   IsInnerFolders Char(1)  NOT NULL CHECK(IsInnerFolders  IN ('Y', 'N')) default 'Y',
   FolderCnt integer default 0,
   FileCnt integer default 0,
   Atribt char(1) NOT NULL CHECK(Atribt IN ('A', 'D', 'R', 'H')) default 'A',
   ReadOnlyOthDept char(1) CHECK(ReadOnlyOthDept  IN ('Y', 'N')) default 'N',
   ReadOnlyPublic char(1) CHECK(ReadOnlyPublic IN ('Y', 'N')) default 'N',
   CreatedBy bigint NOT NULL references UserMst(UserId),
   CreationDate  timestamp
   ); 

CREATE TABLE FileMst(
   FileId bigint NOT NULL,
   SeqNo int NOT NULL,
   FolderId bigint NOT NULL references folderMst(folderId),
   RootId bigint NOT NULL,
   FileNm varchar(200) NOT NULL,
   FileContents bytea NOT NULL,
   FileExtn  Char(4) NOT NULL,
   Atribt char(1) NOT NULL CHECK(Atribt IN ('A', 'D', 'R', 'H', 'O')) default 'A',
   CreatedBy bigint NOT NULL references UserMst(UserId),
   CreationDt  timestamp NOT NULL,
   ModifiedBy bigint,
   ModificationDt  timestamp,
   PageCnt  int,
   FilePath text,
   FileLocation text NOT NULL,
   TagStatus char(1) NOT NULL CHECK(TagStatus IN ('Y', 'N')) default 'N',   
   UNIQUE (FileId , SeqNo),
   PRIMARY KEY(FileId , SeqNo)
 );

CREATE TABLE TagTypeMst(
   TagTypeId serial PRIMARY KEY  NOT NULL,
   TagTypeDesc Varchar(100) NOT NULL UNIQUE,
   TagTypeShrtDesc char(3),
   Status   char(1) NOT NULL CHECK(STATUS IN ('A', 'D')) default 'A' 
);

CREATE TABLE TagMst(
   TagGrpId bigserial NOT NULL,
   TagId int NOT NULL,
   TagNm Varchar(100) NOT NULL,
   TagTypeId int NOT NULL references TagTypeMst(TagTypeId),
   Width int NOT NULL,
   IsMandatory char(1) NOT NULL CHECK(STATUS IN ('Y', 'N')),
   ListId int NOT NULL references ListMst(ListId),
   DispSeqNo int NOT NULL,
   CreatedBy bigint NOT NULL references UserMst(UserId),
   CreatedDateTime NOT NULL timestamp,
   Status   char(1) NOT NULL CHECK(STATUS IN ('A', 'D')) default 'A',
   PRIMARY KEY(TagGrpId , TagId) 
);

CREATE TABLE FileTagsData(
   FTagId bigserial PRIMARY KEY  NOT NULL,
   FileId  bigint  NOT NULL references FileMst(FileId),
   SeqNo int NOT NULL references FileMst(SeqNo),
   TagGrpId bigint NOT NULL references TagMst(TagGrpId),
   TagId int NOT NULL references TagMst(TagId),
   TagData Varchar(200) NOT NULL,
   ListId int NOT NULL references ListData(ListId),
   ListNo int NOT NULL references ListData(ListNo),
  CreatedBy bigint NOT NULL references UserMst(UserId),
   CreationDate NOT NULL timestamp,
 )


 create or replace function increment_CurrentVal(IN seqNm_a varchar)
returns integer as $currentVal_a$
declare currentVal_a integer;
begin
  return(SELECT a.currentVal from AllSequence a where a.seqNm = seqNm_a);
end;
$currentVal_a$ language plpgsql;

Select increment_CurrentVal('FolderId')

 
CREATE OR REPLACE FUNCTION increment_CurrentVal(seqName varchar)
RETURNS int AS
$BODY$
BEGIN
DECLARE value integer;

        SELECT currentVal 
        FROM    AllSequence
        WHERE   seqNm = seqName;
		value = currentVal+1;
		
		Update AllSequence set currentVal = value where seqNm = seqName;
        RETURN value;
$BODY$
LANGUAGE plpgsql
SELECT public.increment_currentval(
	'FolderId'
)

CREATE OR REPLACE FUNCTION master.test2(tehsil text, district text, state text, flag text)
RETURNS int AS
$BODY$
BEGIN
Declare
ione int;
IF flag='A' THEN
select COALESCE (Count(*))into ione from master.population where income in('1','2')and statecode=state;
ELSIF flag='B' THEN
select COALESCE (Count(*)) into ione from master.population where income in('1','2') and statecode=state and districtcode=district ;
ELSIF flag='C' THEN
select COALESCE(Count(*)) into ione from master.population where income in('1','2') and statecode=state and districtcode=district and tehsilcode=tehsil;


ELSE
select COALESCE (Count(*)) into ione from master.population where income in('1','2');
END IF;

return ione;
END;
$BODY$
LANGUAGE plpgsql
    
select * from classmst;

delete from classmst where classid =19;

Select * from usermst;

update usermst set userlevel=0 where userId=1;

select * from config;

select * from groupmst;

select * from deptmst;

select * from foldermst;	
  
   
insert into deptMst (deptnm, shrtnm,creationdt) VALUES ('Computer', 'Cse','2007-12-13');
insert into desigMst (desgnm, shrtnm,creationdt) VALUES ('Admin', 'Ad', '2018-01-01');
INSERT INTO hintquestionmst(hintquestion)VALUES ('What is your First Name?');

INSERT INTO public.usermst(emailid, username, address, mobno, deptid, desgid, userlevel, upw1, createdby, creationdate, status, hintid, hintans)VALUES('userTwo@test.com', 'userTwo@test.com', 'Pune', 3333333333, 1, 3, 1 , 1234, 'admin@test.com', '2018-01-01', 'A', 1, 'userTwo');

http://127.0.0.1:49741/browser/

SELECT * from taggrpmst;

CREATE TABLE TagTypeMst(
   TagTypeId serial PRIMARY KEY  NOT NULL,
   TagTypeDesc Varchar(100) NOT NULL UNIQUE,
   TagTypeShrtDesc char(3),
   Status   char(1) NOT NULL CHECK(STATUS IN ('A', 'D')) default 'A' 
);

SELECT * from TagTypeMst;

CREATE TABLE TagMst(
   TagGrpId bigserial NOT NULL,
   TagId int NOT NULL,
   TagNm Varchar(100) NOT NULL,
   TagTypeId int NOT NULL references TagTypeMst(TagTypeId),
   Width int NOT NULL,
   IsMandatory char(1) NOT NULL CHECK(STATUS IN ('Y', 'N')),
   ListId int NOT NULL references ListMst(ListId),
   DispSeqNo int NOT NULL,
   CreatedBy bigint NOT NULL references UserMst(UserId),
   CreatedDateTime  timestamp NOT NULL,
   Status   char(1) NOT NULL CHECK(STATUS IN ('A', 'D')) default 'A',
   PRIMARY KEY(TagGrpId , TagId) 
);
								   
Select * from tagmst;	